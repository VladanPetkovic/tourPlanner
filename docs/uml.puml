@startuml TourPlanner

' UI Layer
package "UI Layer" <<UI_LAYER>> {
    [Tour Management View] as TMV
    [Tour Log Management View] as TLMV
    [Report Generation View] as RGV
}

' Business Layer
package "Business Layer" <<BL_LAYER>> {
    [Tour Manager] as TM
    [Tour LogManager] as TLM
    [Report Generator] as RG
    [Input Validator] as IV
    [Popularity and Child-Friendliness Calculator] as PCC
}

' Data Access Layer
package "Data Access Layer" <<DAL_LAYER>> {
    [Tour Repository] as TR
    [Tour Log Repository] as TLR
    [Configuration Manager] as CM
}

' External Components
package "External Components" <<EXTERNAL>> {
    [PostgreSQL Database] as PGDB
    [File System] as FS
    [REST APIs] as APIs
}

' UI Layer to Business Layer
TMV --> TM
TLMV --> TLM
RGV --> RG

' Business Layer to Data Access Layer
TM --> TR
TLM --> TLR
TM --> PCC

' Data Access Layer to External Components
TR --> PGDB
TLR --> PGDB
TM --> FS
TM --> APIs

IV .up.> TM : validates input
IV .up.> TLM : validates input
PCC .down.> TR : calculates based on tour data
RG .right.> TLR : generates reports using logs
CM .down.> PGDB : configures database connections
CM -left-> FS : manages file storage settings

TR --> TLR
TLMV --> TMV
RGV --> TLMV

@enduml



UI Layer (Benutzeroberflächenschicht)
Tour Management View: Benutzeroberfläche, über die Benutzer Touren erstellen, bearbeiten und löschen können.
Tour Log Management View: Ermöglicht es den Benutzern, Logs zu den Touren zu verwalten, wie Dauer, Distanz und persönliche Notizen.
Report Generation View: Über diese Ansicht können Benutzer Berichte über Touren und Tour-Logs generieren, wie Durchschnittswerte und Statistiken.

Business Layer (Geschäftslogikschicht)
Tour Manager : Für Geschäftslogik verantwortlich, die mit der Verwaltung von Touren zusammenhängt, wie das Erstellen neuer Touren oder das Aktualisieren bestehender.
Tour LogManager: Ähnlich wie der Tour Manager, aber spezialisiert auf die Verwaltung von Tour-Logs, wie der Erstellung und Bearbeitung von Einträgen.
Report Generator: Generiert Berichte basierend auf den Touren und ihren Logs, wie mit Durchschnittswerten und anderen statistischen Analysen.
Input Validator: Validiert die Benutzereingaben, um sicherzustellen, dass nur korrekte und sinnvolle Daten in die Anwendung gelangen.
Popularity and Child-Friendliness Calculator: Berechnet Attribute von Touren, wie deren Beliebtheit und Kinderfreundlichkeit.

Data Access Layer (Datenzugriffsschicht)
Tour Repository: Interagiert mit der Datenbank, um Touren zu speichern, abzurufen, zu aktualisieren oder zu löschen. Es kommuniziert direkt mit der PostgreSQL-Datenbank.
Tour Log Repository: Ähnlich wie das Tour Repository, aber spezialisiert auf die Verwaltung von Tour-Logs.
Configuration Manager: Verwaltet externe Konfigurationen wie Datenbankverbindungen und Einstellungen für den Dateispeicher.

External Components (Externe Komponenten)
PostgreSQL Database: Die Datenbank, in der Touren und Tour-Logs gespeichert werden.
File System: Wird für die Speicherung von Dateien verwendet, die von der Anwendung benötigt werden, wie z.B. Bilder oder externe Berichtdateien.
REST APIs: Externe Schnittstellen, über die die Anwendung zusätzliche Daten und Dienste abrufen kann, wie z.B. Karteninformationen oder Wetterdaten.

